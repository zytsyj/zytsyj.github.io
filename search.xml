<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>“第一个c语言程序”</title>
      <link href="/2022/08/27/%E2%80%9C%E7%AC%AC%E4%B8%80%E4%B8%AAc%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E2%80%9D/"/>
      <url>/2022/08/27/%E2%80%9C%E7%AC%AC%E4%B8%80%E4%B8%AAc%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E2%80%9D/</url>
      
        <content type="html"><![CDATA[<h6 id="前言："><a href="#前言：" class="headerlink" title="前言："></a><strong>前言</strong>：</h6><h6 id="对于初学者来说，语言的选择我的建议是c-x2F-c-里面选择一个，原因无他，好入门而已。而在c-x2F-c-里面做选择的话其实都一样，无论你选择了哪一个，到后面指定是都要会的。鉴于我自己的大学有c-的课程，我便选择了c语言作为自己的第一门计算机语言，好为大一下的c-学习打个基础（两者在逻辑语言上真的十分相似，最大的区别在前期几乎就是语法）"><a href="#对于初学者来说，语言的选择我的建议是c-x2F-c-里面选择一个，原因无他，好入门而已。而在c-x2F-c-里面做选择的话其实都一样，无论你选择了哪一个，到后面指定是都要会的。鉴于我自己的大学有c-的课程，我便选择了c语言作为自己的第一门计算机语言，好为大一下的c-学习打个基础（两者在逻辑语言上真的十分相似，最大的区别在前期几乎就是语法）" class="headerlink" title="对于初学者来说，语言的选择我的建议是c&#x2F;c++里面选择一个，原因无他，好入门而已。而在c&#x2F;c++里面做选择的话其实都一样，无论你选择了哪一个，到后面指定是都要会的。鉴于我自己的大学有c++的课程，我便选择了c语言作为自己的第一门计算机语言，好为大一下的c++学习打个基础（两者在逻辑语言上真的十分相似，最大的区别在前期几乎就是语法）"></a>对于初学者来说，语言的选择我的建议是c&#x2F;c++里面选择一个，原因无他，好入门而已。而在c&#x2F;c++里面做选择的话其实都一样，无论你选择了哪一个，到后面指定是都要会的。鉴于我自己的大学有c++的课程，我便选择了c语言作为自己的第一门计算机语言，好为大一下的c++学习打个基础（两者在逻辑语言上真的十分相似，最大的区别在前期几乎就是语法）</h6><h2 id="好了废话不多说直接开整！（为什么第一个要写hello-world呢？这边建议自己查一查这个缘故哦"><a href="#好了废话不多说直接开整！（为什么第一个要写hello-world呢？这边建议自己查一查这个缘故哦" class="headerlink" title="好了废话不多说直接开整！（为什么第一个要写hello world呢？这边建议自己查一查这个缘故哦)"></a>好了废话不多说直接开整！（为什么第一个要写hello world呢？这边建议自己查一查这个缘故哦)</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">    <span class="comment">//这个其实正规点应该是  int main（void）在现代的编译器中几乎没啥区别</span></span><br><span class="line">&#123;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;\a Hello world!\n&quot;</span>);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对第一个程序的解析"><a href="#对第一个程序的解析" class="headerlink" title="对第一个程序的解析"></a>对第一个程序的解析</h2><p>好了，那么如果你用配好的编译器更着这个程序打一遍，你就完成了人生中第一个程序的编译（有没有很高兴！）</p><h4 id="那么我们现在开始逐句分析！（我会以注释的形式来解释每一句）"><a href="#那么我们现在开始逐句分析！（我会以注释的形式来解释每一句）" class="headerlink" title="那么我们现在开始逐句分析！（我会以注释的形式来解释每一句）"></a>那么我们现在开始<strong>逐句分析！</strong>（我会以注释的形式来解释每一句）</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line">  <span class="comment">//  这第一句可以看作一个c语言固有的开头格式（建议记住哈），#include是</span></span><br><span class="line">  <span class="comment">//函数头文件的插入指令，其后跟着的就是头文件（或者叫头函数）。</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//  所谓头文件就是提前告诉计算机你的代码中会用到的函数语句，这样计算机才</span></span><br><span class="line">  <span class="comment">//会从内置的函数库中去调用，你也就才能在程序中使用那些函数头中包含的函数。而</span></span><br><span class="line">  <span class="comment">//我们这里所使用的 &lt;stdio.h&gt;则是一个基本的头文件,对于初学者来说先不要</span></span><br><span class="line">  <span class="comment">//考虑用其他的头文件，只需要知道这个概念。</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">  <span class="comment">//  这里我们调用了 main函数即主调函数，这是c语言与计算机约定的程序入口，</span></span><br><span class="line">  <span class="comment">//作用便是告诉计算机你要开始编写（运行）你的程序，让它做好准备，即运行一</span></span><br><span class="line">  <span class="comment">//些你看不见的但是对于程序运行所必要的前提程序。而int则是声明了main函</span></span><br><span class="line">  <span class="comment">//数返回值的类型（这个之后再说)。</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;\a Hello world!\n&quot;</span>);</span><br><span class="line">  <span class="comment">//  这一句便是我们程序的主体，即运用printf这个被调函数打印出 Hello wor</span></span><br><span class="line">  <span class="comment">//ld ，其实挺好看懂的，重点在于结尾的&quot;；&quot;号一定不能忘！</span></span><br><span class="line">    </span><br><span class="line">  <span class="comment">//  补充一下 \a表示蜂鸣器，即电脑会响一下，\n表示光标移动到下一行，即</span></span><br><span class="line">  <span class="comment">//换行，这两个字符为功能符，不打印。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="comment">//  这便是程序的结尾，是main主调函数的返回值，通常会返回一个0给电脑来告</span></span><br><span class="line">  <span class="comment">//诉它程序正常运行完毕，暂时先记住即可。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>呼~~~大功告成，恭喜你完成并理解了自己的第一个程序</p>]]></content>
      
      
      
        <tags>
            
            <tag> 韬哥的c语言入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“编译器与环境搭建”</title>
      <link href="/2022/08/25/%E2%80%9C%E7%BC%96%E8%AF%91%E5%99%A8%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E2%80%9D/"/>
      <url>/2022/08/25/%E2%80%9C%E7%BC%96%E8%AF%91%E5%99%A8%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E2%80%9D/</url>
      
        <content type="html"><![CDATA[<h6 id="前言："><a href="#前言：" class="headerlink" title="前言："></a><strong>前言</strong>：</h6><h6 id="其实第一篇文章写些什么我蛮纠结的，最终感觉还是应该要实用一点（doge）。回想我并不长的的计算机学习过程，也是的的确确碰到了很多问题，虽然说解决这些问题的过程同样是一笔财富，但我还是决定小小总结一下，让新人少走一点歪路-说多了都是泪-lt-gt-。"><a href="#其实第一篇文章写些什么我蛮纠结的，最终感觉还是应该要实用一点（doge）。回想我并不长的的计算机学习过程，也是的的确确碰到了很多问题，虽然说解决这些问题的过程同样是一笔财富，但我还是决定小小总结一下，让新人少走一点歪路-说多了都是泪-lt-gt-。" class="headerlink" title="其实第一篇文章写些什么我蛮纠结的，最终感觉还是应该要实用一点（doge）。回想我并不长的的计算机学习过程，也是的的确确碰到了很多问题，虽然说解决这些问题的过程同样是一笔财富，但我还是决定小小总结一下，让新人少走一点歪路(说多了都是泪&lt;-_-&gt;)。"></a><em>其实第一篇文章写些什么我蛮纠结的，最终感觉还是应该要实用一点（doge）。回想我并不长的的计算机学习过程，也是的的确确碰到了很多问题，虽然说解决这些问题的过程同样是一笔财富，但我还是决定小小总结一下，让新人少走一点歪路(说多了都是泪&lt;-_-&gt;)。</em></h6><p><strong>首先</strong>要想学好一门计算机语言，动手实践是必不可少的，只听讲不真正动手打代码是绝对不可取的，而要开始打码之路一个好的编译器则是一切的开始，那么我就讲讲编译器的选择与配置。</p><p>选择编译器的首要准则便是专业性，而一个专业的编译器则应该具备语法高亮，自动补全，自动换行，写完代码需要知道自己有没有写错，需要调试，需要运行。这也是专门的编辑器有的功能。很明显这些优势电脑或手机自带的记事本都不具备，所以用其打代码是及其折磨的（再次对我暑假里用记事本狂打代码的同学表示同情，哈哈哈哈！）</p><p>那么基于此我推荐以下编译器：</p><ol><li>针对windows的童鞋们，其实选择有很多像是dev  c++，vs ，vscode等其实都可以。但是我更推荐vs与vscode，因为这两个都是微软自己开发的软件，专业且先进（指不像dev那样显得老土），同时你永远可以相信微软程序员的能力</li><li>对于苹果的同学，你也没啥好选的xcode上吧（其实上面的vs与vscode也行，但苹果上用微软官方编译器总感觉怪怪的），这里说一下，由于苹果对系统与软件的高限制，其实mac上打代码并不适合新人（大佬随意）。</li></ol><p>其实看到这里童鞋门也能看出来我就是来推vs与vscoded（@微软打钱）因为这两个功能齐全，确实好用！而且两个各有特点同学们按需来使用</p><ul><li><p><em>Visual Studio 各种各样作用只有在 Windows 和 macOS（Mac OS X ）以上运作，不可以弹跳各服务平台编写。并且ta是现阶段最时兴的Windows平台应用软件的集成化开发自然环境。给予了高級开发专用工具、调节作用、数据库查询作用和自主创新作用，协助在各种各样服务平台上迅速建立当今最优秀的应用软件，开发新的程序流程。</em></p></li><li><p><em>visual studio code是一款真真正正的混合开发在线编辑器，能够在客户习惯性的服务平台上应用，而不是非得迁移到 Windows上。除此外ta的最大亮点则是其高自由性，你可以用各类插件把vscode变成最适合你的编译器</em></p></li></ul><h3 id="之后来谈谈编译器的环境配置"><a href="#之后来谈谈编译器的环境配置" class="headerlink" title="之后来谈谈编译器的环境配置"></a><strong>之后来谈谈编译器的环境配置</strong></h3><p>以vscode为例，其最本质上就是一个编辑器用以编辑，与上面提到记事本是没有本质区别的，但它却可以有调试与运行等等功能，这便是我们配置环境的功劳（当然大头是微软程序员的功劳）</p><p>比如说我要使用c语言那么我就要使用llvm和mingw，python要下载python。这都是为了满足调试，运行的功能。下载并设置好这些后环境配置就完成了一半（框架已经有了）之后就是在.json中设置路径，即告诉你的电脑你要用如vscode来写cyy，将电脑中的gcc（你可以简单理解为电脑来理解你打的代码的地方）与你的vscode直接打通一条路，自动连接而不是每次运行就<strong>手动一个一个去链接</strong>（计算机也知道你做不到这个，所以没配好环境它会直接报错，很人性对吧）这些都完成后你就可以愉快的打代码啦</p><p>这里先这样抽象的理解下，至于如何配环境网上有很多大佬写了详尽的教材，小白只需一步一步跟着来就行，我就不赘述了</p><p>当然这里推荐小白看一下b站<em>BV1r4411E7Be</em>的视频，这位大佬浓缩一个自动配置程序，小白跟着走就行简单实用，先能打代码才是最重要的对吧</p>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“WELCOME!”</title>
      <link href="/2022/08/23/%E2%80%9C2%E2%80%9D/"/>
      <url>/2022/08/23/%E2%80%9C2%E2%80%9D/</url>
      
        <content type="html"><![CDATA[<h1 id="欢迎来到我的网站！"><a href="#欢迎来到我的网站！" class="headerlink" title="欢迎来到我的网站！"></a>欢迎来到我的网站！</h1><h2 id="Welcome-我叫张跃韬，一名武汉大学计算机学院的大一新生，在一位学长的帮助下搞了这个网站"><a href="#Welcome-我叫张跃韬，一名武汉大学计算机学院的大一新生，在一位学长的帮助下搞了这个网站" class="headerlink" title="Welcome! 我叫张跃韬，一名武汉大学计算机学院的大一新生，在一位学长的帮助下搞了这个网站"></a>Welcome! 我叫张跃韬，一名武汉大学计算机学院的大一新生，在一位学长的帮助下搞了这个网站</h2><p><strong>接下来的四年，我将在这里记录自己的大学生活，并分享自己的学习过程中遇到的坑和解决方式，希望随着时间积累我能积累更多经验以帮助更多人！</strong></p><p><img src="https://zytsyj.oss-cn-hangzhou.aliyuncs.com/img/11c60233315d5387a16e98f81c7d178.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 开端 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
